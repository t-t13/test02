{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  count: 0,\n  showNumCount: true\n};\n\n// ---------------------------------------------------------------------------------------\n// create any slide for use another event \nconst countSlice = createSlice({\n  name: \"counterPain\",\n  initialState: initialState,\n  reducers: {\n    increment: state => {\n      state.count += 1;\n    },\n    decrement: state => {\n      state.count -= 1;\n    },\n    increase: (state, action) => {\n      state.count += action.payload.amount;\n    },\n    toggleChange: state => {\n      state.showNumCount = !state.showNumCount;\n    }\n    //   aheee: (state) => {  console.log(state); },\n  }\n});\n\n// ---------------------------------------------------------------------------------------\n\n// ---------------------------------------------------------------------------------------\n// for use with dispatch \n//   countSlice.actions.increment();\nexport const countActions = countSlice.actions;\n// ---------------------------------------------------------------------------------------\n\n// ---------------------------------------------------------------------------------------\nconst store = configureStore({\n  reducer: {\n    //key is match a name of slice\n    //ไม่ match ร ะ เ บิ ด\n    counterPain: countSlice.reducer // `reducer` key must be used here\n  }\n});\n// ---------------------------------------------------------------------------------------\n\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialState","count","showNumCount","countSlice","name","reducers","increment","state","decrement","increase","action","payload","amount","toggleChange","countActions","actions","store","reducer","counterPain"],"sources":["/Users/thanapattrairatpanasan/Desktop/test01/src/store/store.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { count: 0, showNumCount: true };\n\n// ---------------------------------------------------------------------------------------\n// create any slide for use another event \nconst countSlice = createSlice({\n  name: \"counterPain\",\n  initialState: initialState,\n  reducers: {\n    increment: (state) => {\n      state.count += 1;\n    },\n    decrement: (state) => {\n      state.count -= 1;\n    },\n    increase: (state, action) => {        \n      state.count += action.payload.amount;\n    },\n    toggleChange: (state) => {\n      state.showNumCount = !state.showNumCount;\n    },\n    //   aheee: (state) => {  console.log(state); },\n  },\n});\n\n\n// ---------------------------------------------------------------------------------------\n\n\n// ---------------------------------------------------------------------------------------\n// for use with dispatch \n//   countSlice.actions.increment();\nexport const countActions = countSlice.actions;\n// ---------------------------------------------------------------------------------------\n\n\n// ---------------------------------------------------------------------------------------\nconst store = configureStore({\n  reducer: {\n    //key is match a name of slice\n    //ไม่ match ร ะ เ บิ ด\n    counterPain: countSlice.reducer, // `reducer` key must be used here\n  },\n});\n// ---------------------------------------------------------------------------------------\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAE9D,MAAMC,YAAY,GAAG;EAAEC,KAAK,EAAE,CAAC;EAAEC,YAAY,EAAE;AAAK,CAAC;;AAErD;AACA;AACA,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,aAAa;EACnBJ,YAAY,EAAEA,YAAY;EAC1BK,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACN,KAAK,IAAI,CAAC;IAClB,CAAC;IACDO,SAAS,EAAGD,KAAK,IAAK;MACpBA,KAAK,CAACN,KAAK,IAAI,CAAC;IAClB,CAAC;IACDQ,QAAQ,EAAEA,CAACF,KAAK,EAAEG,MAAM,KAAK;MAC3BH,KAAK,CAACN,KAAK,IAAIS,MAAM,CAACC,OAAO,CAACC,MAAM;IACtC,CAAC;IACDC,YAAY,EAAGN,KAAK,IAAK;MACvBA,KAAK,CAACL,YAAY,GAAG,CAACK,KAAK,CAACL,YAAY;IAC1C;IACA;EACF;AACF,CAAC,CAAC;;AAGF;;AAGA;AACA;AACA;AACA,OAAO,MAAMY,YAAY,GAAGX,UAAU,CAACY,OAAO;AAC9C;;AAGA;AACA,MAAMC,KAAK,GAAGlB,cAAc,CAAC;EAC3BmB,OAAO,EAAE;IACP;IACA;IACAC,WAAW,EAAEf,UAAU,CAACc,OAAO,CAAE;EACnC;AACF,CAAC,CAAC;AACF;;AAEA,eAAeD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}